// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Gender {
    male
    female
    other
}

enum Role {
    admin
    user
}

enum Difficult {
    easy
    medium
    hard
}

model User{
    id          Int      @id @default(autoincrement())
    fullname    String
    username    String
    email       String      @unique
    password    String
    gender      Gender?
    avatar      String      @default("/img/default-avatar.png")
    role        Role        @default(user)
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    quizHistories QuizHistory[]
}

model Quiz {
    id              Int      @id @default(autoincrement())
    name            String
    description     String?
    rating          Float       @default(0)
    image           String?
    author          String?
    duration        Int         @default(0)
    genre           String?
    difficult       Difficult     @default(medium)
    deleted         Boolean        @default(false)
    createdAt       DateTime       @default(now())
    updatedAt       DateTime       @updatedAt
    questions       Question[]
    quizHistories   QuizHistory[]
}

model Question {
    id            Int      @id @default(autoincrement())
    questionText  String
    options       String[] // PostgreSQL hỗ trợ array kiểu này
    correctAnswer String
    quiz          Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
    quizId        Int
}

model QuizHistory {
    id             Int      @id @default(autoincrement())
    correctCount   Int
    totalQuestions Int
    completedAt    DateTime @default(now())
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
    user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId         Int
    quiz           Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
    quizId         Int
}